#!/bin/bash
# health-check.sh

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}üîç Verificando sa√∫de da infraestrutura Smart City Mini${NC}"
echo "=================================================="

# Verificar status do Minikube
echo -e "${YELLOW}üê≥ Status do Minikube:${NC}"
minikube status
echo ""

# Verificar namespaces
echo -e "${YELLOW}üìÇ Namespaces:${NC}"
kubectl get namespaces
echo ""

# Verificar pods por namespace
NAMESPACES=("smartcity" "kong" "monitoring" "istio-system" "cert-manager")

for ns in "${NAMESPACES[@]}"; do
    if kubectl get namespace $ns >/dev/null 2>&1; then
        echo -e "${YELLOW}üì¶ Pods no namespace '$ns':${NC}"
        kubectl get pods -n $ns --no-headers | wc -l | xargs echo "Total de pods: "
        kubectl get pods -n $ns
        echo ""

        # Verificar pods com problemas
        PROBLEMATIC_PODS=$(kubectl get pods -n $ns --no-headers | grep -v Running | grep -v Completed | wc -l)
        if [ $PROBLEMATIC_PODS -gt 0 ]; then
            echo -e "${RED}‚ö†Ô∏è  Pods com problemas em $ns:${NC}"
            kubectl get pods -n $ns | grep -v Running | grep -v Completed
            echo ""
        fi
    else
        echo -e "${YELLOW}üì¶ Namespace '$ns' n√£o existe${NC}"
        echo ""
    fi
done

# Verificar servi√ßos
echo -e "${YELLOW}üåê Servi√ßos principais:${NC}"
kubectl get svc -n smartcity 2>/dev/null || echo "Namespace smartcity n√£o encontrado"
kubectl get svc -n kong 2>/dev/null || echo "Namespace kong n√£o encontrado"
kubectl get svc -n monitoring 2>/dev/null || echo "Namespace monitoring n√£o encontrado"
echo ""

# Verificar ingress
echo -e "${YELLOW}üö™ Ingress:${NC}"
kubectl get ingress -n smartcity 2>/dev/null || echo "Nenhum ingress encontrado"
echo ""

# Verificar recursos
echo -e "${YELLOW}üìä Uso de recursos:${NC}"
kubectl top nodes 2>/dev/null || echo "M√©tricas n√£o dispon√≠veis"
echo ""
kubectl top pods -n smartcity 2>/dev/null || echo "Pods smartcity n√£o encontrados"
echo ""

# Testar conectividade b√°sica
echo -e "${YELLOW}üåê Testes de conectividade:${NC}"

# Testar Kong
if kubectl get svc kong-kong-proxy -n kong >/dev/null 2>&1; then
    KONG_URL="http://$(minikube ip):$(kubectl get svc kong-kong-proxy -n kong -o jsonpath='{.spec.ports[0].nodePort}')"
    echo "Testando Kong Proxy: $KONG_URL"
    if curl -s --max-time 5 $KONG_URL >/dev/null; then
        echo -e "${GREEN}‚úÖ Kong Proxy acess√≠vel${NC}"
    else
        echo -e "${RED}‚ùå Kong Proxy n√£o responde${NC}"
    fi
else
    echo -e "${RED}‚ùå Servi√ßo Kong n√£o encontrado${NC}"
fi

# Testar Grafana
if kubectl get svc prometheus-grafana -n monitoring >/dev/null 2>&1; then
    GRAFANA_URL="http://$(minikube ip):$(kubectl get svc prometheus-grafana -n monitoring -o jsonpath='{.spec.ports[0].nodePort}')"
    echo "Grafana dispon√≠vel em: $GRAFANA_URL"
    echo -e "${GREEN}‚úÖ Grafana instalado${NC}"
else
    echo -e "${RED}‚ùå Grafana n√£o encontrado${NC}"
fi

# Testar Kiali
if kubectl get svc kiali -n istio-system >/dev/null 2>&1; then
    KIALI_URL="http://$(minikube ip):$(kubectl get svc kiali -n istio-system -o jsonpath='{.spec.ports[0].nodePort}')"
    echo "Kiali dispon√≠vel em: $KIALI_URL"
    echo -e "${GREEN}‚úÖ Kiali instalado${NC}"
else
    echo -e "${RED}‚ùå Kiali n√£o encontrado${NC}"
fi

echo ""
echo -e "${BLUE}üìã Resumo da verifica√ß√£o:${NC}"
echo "=================================================="

# Contar pods saud√°veis
TOTAL_PODS=$(kubectl get pods --all-namespaces --no-headers 2>/dev/null | wc -l)
RUNNING_PODS=$(kubectl get pods --all-namespaces --no-headers 2>/dev/null | grep Running | wc -l)
PENDING_PODS=$(kubectl get pods --all-namespaces --no-headers 2>/dev/null | grep Pending | wc -l)
FAILED_PODS=$(kubectl get pods --all-namespaces --no-headers 2>/dev/null | grep -E "(Error|CrashLoopBackOff|Failed)" | wc -l)

echo "Total de pods: $TOTAL_PODS"
echo -e "Pods rodando: ${GREEN}$RUNNING_PODS${NC}"
if [ $PENDING_PODS -gt 0 ]; then
    echo -e "Pods pendentes: ${YELLOW}$PENDING_PODS${NC}"
fi
if [ $FAILED_PODS -gt 0 ]; then
    echo -e "Pods com falha: ${RED}$FAILED_PODS${NC}"
fi

# Verificar se infraestrutura cr√≠tica est√° OK
CRITICAL_SERVICES=("kong-kong-proxy" "prometheus-grafana" "kiali")
CRITICAL_OK=0
for service in "${CRITICAL_SERVICES[@]}"; do
    if kubectl get svc $service --all-namespaces >/dev/null 2>&1; then
        ((CRITICAL_OK++))
    fi
done

if [ $CRITICAL_OK -eq ${#CRITICAL_SERVICES[@]} ]; then
    echo -e "${GREEN}‚úÖ Infraestrutura cr√≠tica OK${NC}"
else
    echo -e "${RED}‚ùå Problemas na infraestrutura cr√≠tica${NC}"
fi

echo ""
echo -e "${BLUE}üîß Comandos √∫teis para troubleshooting:${NC}"
echo "kubectl logs -f <pod-name> -n <namespace>"
echo "kubectl describe pod <pod-name> -n <namespace>"
echo "kubectl exec -it <pod-name> -n <namespace> -- /bin/bash"
echo "minikube dashboard"
echo "istioctl dashboard kiali"
