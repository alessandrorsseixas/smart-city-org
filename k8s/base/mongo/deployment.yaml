# Versão da API do Kubernetes utilizada para este recurso
apiVersion: apps/v1
# Tipo de recurso Kubernetes - StatefulSet para gerenciamento de pods com identidade estável
kind: StatefulSet
# Metadados que definem as características do statefulset
metadata:
  # Nome único do statefulset no namespace
  name: mongodb-statefulset
  # Namespace onde o statefulset será criado
  namespace: smartcity
  # Labels para identificação e seleção do statefulset
  labels:
    app: mongodb
    component: database
    environment: development
  # Annotations para informações adicionais
  annotations:
    description: "MongoDB StatefulSet for Smart City application data storage"
# Especificações do statefulset
spec:
  # Nome do serviço headless para identificação estável na rede
  serviceName: mongodb-service
  # Número de réplicas desejadas
  replicas: 1
  # Seletor para identificar os pods gerenciados por este statefulset
  selector:
    matchLabels:
      app: mongodb
      component: database
  # Template para criação dos pods
  template:
    # Metadados dos pods que serão criados
    metadata:
      labels:
        app: mongodb
        component: database
        environment: development
    # Especificações dos pods
    spec:
      # Garantir que o volume montado tenha a propriedade correta para o MongoDB
      securityContext:
        runAsUser: 999
        fsGroup: 999
      # Containers que compõem o pod
      containers:
        # Container principal do MongoDB
        - name: mongodb
          # Imagem oficial do MongoDB
          image: mongo:7.0
          # Política de pull da imagem
          imagePullPolicy: IfNotPresent
          # Portas expostas pelo container
          ports:
            - name: mongodb
              containerPort: 27017
              protocol: TCP
          # Variáveis de ambiente para configuração
          env:
            # Habilita autenticação (lido do Secret mongodb-secrets)
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-secrets
                  key: username
            # Senha do usuário root (lida do Secret mongodb-secrets)
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secrets
                  key: password
            # Database inicial (valor fixo)
            - name: MONGO_INITDB_DATABASE
              value: "smartcity"
          # Recursos computacionais
          resources:
            # Recursos mínimos garantidos
            requests:
              memory: "256Mi"
              cpu: "250m"
            # Limites máximos de recursos
            limits:
              memory: "512Mi"
              cpu: "500m"
          # Verificações de saúde do container
          startupProbe:
            tcpSocket:
              port: 27017
            # Tempo inicial antes da primeira verificação
            initialDelaySeconds: 10
            # Intervalo entre verificações
            periodSeconds: 10
            # Número de falhas consecutivas antes de reiniciar
            failureThreshold: 30
          livenessProbe:
            tcpSocket:
              port: 27017
            # Tempo inicial antes da primeira verificação
            initialDelaySeconds: 30
            # Intervalo entre verificações
            periodSeconds: 10
            # Timeout para cada verificação
            timeoutSeconds: 5
            # Número de falhas consecutivas antes de reiniciar
            failureThreshold: 3
          # Verificação se o container está pronto para receber tráfego
          readinessProbe:
            tcpSocket:
              port: 27017
            # Tempo inicial antes da primeira verificação
            initialDelaySeconds: 10
            # Intervalo entre verificações
            periodSeconds: 5
            # Timeout para cada verificação
            timeoutSeconds: 3
            # Número de falhas consecutivas antes de marcar como não-pronto
            failureThreshold: 3
          # Volumes montados no container
          volumeMounts:
            # Diretório de dados do MongoDB (usará volumeClaimTemplate)
            - name: mongodb-data
              mountPath: /data/db
            # Arquivo de configuração customizado
            - name: mongodb-config
              mountPath: /etc/mongod.conf
              subPath: mongod.conf
      # Mantém volumes não persistentes (ConfigMap) no template
      volumes:
        - name: mongodb-config
          configMap:
            name: mongodb-config
  # VolumeClaimTemplates para criar PVCs estáveis por pod (StatefulSet)
  volumeClaimTemplates:
    - metadata:
        name: mongodb-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
        # storageClassName: standard