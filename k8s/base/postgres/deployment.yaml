# Versão da API do Kubernetes utilizada para este recurso
apiVersion: apps/v1
# Tipo de recurso Kubernetes - StatefulSet para gerenciamento de pods com identidade e armazenamento estável
kind: StatefulSet
# Metadados que definem as características do StatefulSet
metadata:
  # Nome único do StatefulSet no namespace
  name: postgres-statefulset
  # Namespace onde o StatefulSet será criado
  namespace: smartcity
  # Labels para identificação e seleção do StatefulSet
  labels:
    app: postgres
    component: database
    environment: development
  # Annotations para informações adicionais
  annotations:
    description: "PostgreSQL StatefulSet for Smart City application data storage"
# Especificações do StatefulSet
spec:
  # Nome do serviço associado ao StatefulSet
  serviceName: postgres-service
  # Número de réplicas desejadas
  replicas: 1
  # Seletor para identificar os pods gerenciados por este StatefulSet
  selector:
    matchLabels:
      app: postgres
      component: database
  # Template para criação dos pods
  template:
    # Metadados dos pods que serão criados
    metadata:
      labels:
        app: postgres
        component: database
        environment: development
    # Especificações dos pods
    spec:
      # Containers que compõem o pod
      containers:
        # Container principal do PostgreSQL
        - name: postgres
          # Imagem oficial do PostgreSQL
          image: postgres:16
          # Política de pull da imagem
          imagePullPolicy: IfNotPresent
          # Portas expostas pelo container
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          # Variáveis de ambiente para configuração
          env:
            # Nome do database inicial
            - name: POSTGRES_DB
              value: "smartcity"
            # Usuário administrador (lido do Secret postgres-secrets)
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: username
            # Senha do usuário administrador (lida do Secret postgres-secrets)
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: password
            # Configurações adicionais do PostgreSQL
            - name: POSTGRES_INITDB_ARGS
              value: "--encoding=UTF8 --locale=C"
            # Timezone
            - name: TZ
              value: "America/Sao_Paulo"
          # Recursos computacionais
          resources:
            # Recursos mínimos garantidos
            requests:
              memory: "256Mi"
              cpu: "250m"
            # Limites máximos de recursos
            limits:
              memory: "512Mi"
              cpu: "500m"
          # Verificações de saúde do container
          livenessProbe:
            # Comando para verificar se o PostgreSQL está respondendo
            exec:
              command:
                - pg_isready
                - -U
                - admin
                - -d
                - smartcity
            # Tempo inicial antes da primeira verificação
            initialDelaySeconds: 30
            # Intervalo entre verificações
            periodSeconds: 10
            # Timeout para cada verificação
            timeoutSeconds: 5
            # Número de falhas consecutivas antes de reiniciar
            failureThreshold: 3
          # Verificação se o container está pronto para receber tráfego
          readinessProbe:
            # Comando para verificar se o PostgreSQL está pronto
            exec:
              command:
                - pg_isready
                - -U
                - admin
                - -d
                - smartcity
            # Tempo inicial antes da primeira verificação
            initialDelaySeconds: 5
            # Intervalo entre verificações
            periodSeconds: 5
            # Timeout para cada verificação
            timeoutSeconds: 3
            # Número de falhas consecutivas antes de marcar como não-pronto
            failureThreshold: 3
          # Volumes montados no container
          volumeMounts:
            # Diretório de dados do PostgreSQL
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
            # Scripts de inicialização
            - name: postgres-init
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
    # Volumes disponíveis para o pod
    volumes:
      # ConfigMap com scripts de inicialização
      - name: postgres-init
        configMap:
          name: postgres-init-config
          defaultMode: 0755
  # VolumeClaimTemplates para criar PVCs por membro do StatefulSet
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
        # storageClassName: standard
