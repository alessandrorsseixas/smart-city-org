# Versão da API do Kubernetes utilizada para este recurso
apiVersion: apps/v1
kind: Deployment
metadata:
  # Nome do deployment
  name: redis-deployment
  # Namespace onde será criado
  namespace: smartcity
  # Labels para seleção e organização
  labels:
    app: redis
    component: cache
    environment: development
  # Annotations para informações adicionais
  annotations:
    description: "Redis deployment for Smart City application"
spec:
  # Número de réplicas
  replicas: 1
  # Selector para identificar os pods do deployment
  selector:
    matchLabels:
      app: redis
      component: cache
  # Template do pod
  template:
    metadata:
      labels:
        app: redis
        component: cache
        environment: development
    spec:
      containers:
        - name: redis
          # Imagem oficial do Redis (versão leve alpine)
          image: redis:7.2-alpine
          imagePullPolicy: IfNotPresent
          # Porta exposta pelo container
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          # Recursos recomendados para evitar noisy neighbors
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          # Montagens de volume
          volumeMounts:
            - name: redis-data
              mountPath: /data
            - name: redis-config
              mountPath: /usr/local/etc/redis/redis.conf
              subPath: redis.conf
          # Comando para iniciar o Redis com o arquivo de configuração
          command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
          # Readiness probe para verificar se o Redis responde ao PING
          readinessProbe:
            exec:
              command: ["redis-cli", "ping"]
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          # Liveness probe para verificar a saúde do container
          livenessProbe:
            exec:
              command: ["redis-cli", "ping"]
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
      # Volumes declarados no pod
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-pvc
        - name: redis-config
          configMap:
            name: redis-config
